import { NgModule } from '@angular/core';
import { RouterModule, Routes } from '@angular/router';
import {NotFoundComponent} from "./shared/not-found/not-found.component";
import {AuthGuard} from "./shared/AuthGuard";
import {LoginComponent} from "./shared/login/login.component";

const routes: Routes = [
  { path: 'login', component:LoginComponent },
  { path: 'groups', loadChildren: () => import('./modules/groups/groups.module').then(m => m.GroupsModule), canActivate: [AuthGuard] },
  { path: 'procedures', loadChildren: () => import('./modules/procedures/procedures.module').then(m => m.ProceduresModule), canActivate: [AuthGuard] },
  { path: 'services', loadChildren: () => import('./modules/services/services.module').then(m => m.ServicesModule), canActivate: [AuthGuard] },
  { path: 'steps', loadChildren: () => import('./modules/steps/steps.module').then(m => m.StepsModule), canActivate: [AuthGuard] },
  { path: 'step-resources', loadChildren: () => import('./modules/step-resources/step-resources.module').then(m => m.StepResourcesModule), canActivate: [AuthGuard] },
  { path: 'users', loadChildren: () => import('./modules/users/users.module').then(m => m.UsersModule), canActivate: [AuthGuard] },
  { path: '', redirectTo: '/login', pathMatch: 'full' },
  { path: '**', component: NotFoundComponent },
  { path: '**', redirectTo: '/not-found' }
];

@NgModule({
  imports: [RouterModule.forRoot(routes)],
  exports: [RouterModule]
})
export class AppRoutingModule { }
