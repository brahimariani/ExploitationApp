import {Component, Inject, OnInit} from '@angular/core';
import {FormBuilder, FormGroup, Validators} from "@angular/forms";
import {MAT_DIALOG_DATA, MatDialogRef} from "@angular/material/dialog";
import {ProcedureService} from "../../../services/procedure.service";
import {GroupService} from "../../../services/group.service";
import {Procedure} from "../../../models/procedure";
import {Group} from "../../../models/group";

@Component({
  selector: 'app-procedure-update',
  templateUrl: './procedure-update.component.html',
  styleUrl: './procedure-update.component.css'
})
export class ProcedureUpdateComponent implements OnInit{
  groupForm: FormGroup;
  groups:Group[]=[];

  constructor(
    private fb: FormBuilder,
    private service: GroupService,
    private procedureService:ProcedureService,
    @Inject(MAT_DIALOG_DATA) public data: Procedure,
    private dialogRef: MatDialogRef<ProcedureUpdateComponent>
  ) {
    this.groupForm = this.fb.group({
      title: [data.title, Validators.required],
      description: [data.description, Validators.required],
      groupId:[data.groupId, Validators.required]
    });
  }

  onSubmit(): void {
    if (this.groupForm.valid) {
      this.procedureService.update(this.data.id, this.groupForm.value).subscribe(() => {
        this.dialogRef.close(true);
      });
    }
  }

  onCancel(): void {
    this.dialogRef.close();
  }

  ngOnInit(): void {
    this.service.getAll().subscribe(
      (data) => {
        this.groups = data;},
      (error) => console.error('Failed to load groups', error)
    );
  }
}
